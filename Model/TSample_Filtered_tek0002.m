%% Import data from text file
% Script for importing data from the following text file:
%
%    filename: /Users/danieldacosta/Documents/TCC_Matlab/Model/270519/tek0002.csv
%
% Auto-generated by MATLAB on 08-Sep-2019 18:24:56

clc;
clear;
close all;
%% Setup the Import Options
opts = delimitedTextImportOptions("NumVariables", 4);

% Specify range and delimiter
opts.DataLines = [22, 10000022];
opts.Delimiter = ",";

% Specify column names and types
opts.VariableNames = ["TIME", "GER", "AMP", "PIEZO"];
opts.VariableTypes = ["double", "double", "double", "double"];
opts.ExtraColumnsRule = "ignore";
opts.EmptyLineRule = "read";

% Import the data
tbl = readtable("/Users/danieldacosta/Documents/TCC_Matlab/Model/270519/tek0002.csv", opts);

%% Convert to output type
Ts_orig = 1e-8;
time = tbl.TIME;
DATA = [tbl.GER tbl.AMP tbl.PIEZO];
% pro algum motivo tem tempos repetidos
[time1, indtime] = unique(time);
DATA1 = DATA(indtime,:);
nans  = any(isnan(DATA1)');
DATA2 = DATA1(~nans,:); % por algum motivo tinhamos NANs
time2 = time1(~nans);

figure
plot(time2,DATA2(:,1),'k-')
figure
plot(time2,DATA2(:,3),'k-')

figure
periodogram(DATA2(:,[1 3]),[],[],1/Ts_orig)
legend('u','y')

%% 
% filtrar o sinal para a banda de interesse
[B,A] = butter(5,[0.16 0.3]); % passband in normalized frequency
figure
freqz(B,A)
dataOut = filter(B,A,DATA2);
figure
periodogram(dataOut(:,[1 3]),[],[],1/Ts_orig)
legend('u','y')

timeVector = time2;
PIEZO_trunc = dataOut(:,3);
GER_trunc = dataOut(:,1);
AMP_trunc = dataOut(:,2);
% Ts = 1e-08;
% timeVector = time2;
% PIEZO_trunc = DATA2(:,3);
% GER_trunc = DATA2(:,1);
% AMP_trunc = DATA2(:,2);

%% Linear Autocorrelation
[r, lags] = autocorr(PIEZO_trunc,'NumLags',length(timeVector)-2);
TF = islocalmin(r);
index_min_linear = find(TF,1,'first');
r_min_linear = r(index_min_linear);
tau_min = lags(index_min_linear);

figure
plot(lags,r)
hold on
plot(tau_min, r_min_linear)
legend('r','r_{min}')

%% Non Linear Autocorrelation
PIEZO2_trunc = PIEZO_trunc.^2;
[r2, lags2] = autocorr(PIEZO2_trunc,'NumLags',length(timeVector)-2);
TF2 = islocalmin(r2);
index_min_nonlinear = find(TF2,1,'first');
r_min_linear2 = r(index_min_nonlinear);
tau_min2 = lags2(index_min_nonlinear);

figure
plot(lags2,r2)
hold on
plot(tau_min2, r_min_linear2)
legend('r2','r2_{min}')

%The smallest lag;
tau_m = min(abs(tau_min), abs(tau_min2));
if tau_m > 20
    delta = tau_m/20; %decimation factor. tau*_m shoud be between [10,20] or [5,25]
elseif tau_m < 5
    delta = 10/tau_m;
end
    
Ts_reduced = Ts_orig*delta;
fSampling = 1/Ts_reduced;